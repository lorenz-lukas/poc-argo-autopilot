apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  annotations:
    argocd-autopilot.argoproj-labs.io/default-dest-server: https://kubernetes.default.svc
    argocd.argoproj.io/sync-options: PruneLast=true
    argocd.argoproj.io/sync-wave: "-2"
  creationTimestamp: null
  name: stg
  namespace: argocd
spec:
  clusterResourceWhitelist:
  - group: '*'
    kind: '*'
  description: stg project
  destinations:
  - namespace: '*'
    server: '*'
  namespaceResourceWhitelist:
  - group: '*'
    kind: '*'
  sourceRepos:
  - '*'
status: {}

---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  creationTimestamp: null
  name: stg
  namespace: argocd
spec:
  generators:
  - git:
      files:
      - path: apps/**/stg/config.json
      repoURL: https://github.com/lorenz-lukas/poc-argo-autopilot.git
      requeueAfterSeconds: 20
      revision: ""
      template:
        metadata: {}
        spec:
          destination: {}
          project: ""
  - git:
      files:
      - path: apps/**/stg/config_dir.json
      repoURL: https://github.com/lorenz-lukas/poc-argo-autopilot.git
      requeueAfterSeconds: 20
      revision: ""
      template:
        metadata: {}
        spec:
          destination: {}
          project: ""
          source:
            directory:
              exclude: '{{ exclude }}'
              include: '{{ include }}'
              jsonnet: {}
              recurse: true
            repoURL: ""
  syncPolicy: {}
  template:
    metadata:
      labels:
        app.kubernetes.io/managed-by: argocd-autopilot
        app.kubernetes.io/name: '{{ appName }}'
      name: "{{ userGivenName }}-stg"
      namespace: argocd
    spec:
      destination:
        namespace: '{{ destNamespace }}'
        server: '{{ destServer }}'
      ignoreDifferences:
      - group: argoproj.io
        jsonPointers:
        - /status
        kind: Application
      project: stg
      source:
        path: '{{ srcPath }}'
        repoURL: '{{ srcRepoURL }}'
        targetRevision: '{{ srcTargetRevision }}'
        syncPolicy:
          automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
            prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
            selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
            allowEmpty: false # Allows deleting all application resources during automatic syncing ( false by default ).
          syncOptions:     # Sync options which modifies sync behavior
          - Validate=false # disables resource validation (equivalent to 'kubectl apply --validate=false') ( true by default ).
          - CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.
          - PrunePropagationPolicy=foreground # Supported policies are background, foreground and orphan.
          - PruneLast=true # Allow the ability for resource pruning to happen as a final, implicit wave of a sync operation
          - RespectIgnoreDifferences=true # When syncing changes, respect fields ignored by the ignoreDifferences configuration
          - ApplyOutOfSyncOnly=true # Only sync out-of-sync resources, rather than applying every object in the application
          
          managedNamespaceMetadata: # Sets the metadata for the application namespace. Only valid if CreateNamespace=true (see above), otherwise it's a no-op.
            labels: # The labels to set on the application namespace
              evironment: stg
              cluster: in-cluster

          # The retry feature is available since v1.7
          retry:
            limit: 5 # number of failed sync attempt retries; unlimited number of attempts if less than 0
            backoff:
              duration: 5s # the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
              factor: 2 # a factor to multiply the base duration after each failed retry
              maxDuration: 3m # the maximum amount of time allowed for the backoff strategy
        revisionHistoryLimit: 3
status: {}
